*nvimux* Neovim as a TMUX replacement

=============================================================================
CONTENTS                                                        *nvimux-help*

  Introduction............................|nvimux-introduction|
  Awesomeness.............................|nvimux-awesomeness|
  Commands................................|nvimux-commands|
  Customizing.............................|nvimux-customizing|
  Credits.................................|nvimux-credits|

=============================================================================
Introduction                                            *nvimux-introduction*

Nvimux is just a series of keybindings to allow neovim to work similarly to
TMUX.

Most of the common commands should be implemented and it should be no trouble
setting up new commands in case you miss something

=============================================================================
Awesomeness                                              *nvimux-awesomeness*

Nvimux implements TMUX commands as aliases to neovim commands, as well as
some interesting features such as a customizable toggleable term.

Below are some of the awesome stuff implemented here that are not natively
implemented in tmux.

Quick Terminal                               *nvimux_quick-term* *quick-term*
                  Nvimux allows a quick terminal to be available through all
                  tabs through the shortcut |nvimux-prefix|q. It will open
                  the same shared terminal on all windows. If using |neoterm|,
                  will make use of |Ttoggle|.

=============================================================================
Commands                                                    *nvimux-commands*

Nvimux provides some commands for you to reuse its logic allowing even
further customization.

NvimuxVerticalSplit                                     *NvimuxVerticalSplit*
                  Simple alias for quick vertical window splitting.
                  Defined as >
                    command! NvimuxVerticalSplit vspl|wincmd l|enew

NvimuxHorizontalSplit                                 *NvimuxHorizontalSplit*
                  Simple alias for quick horizontal window splitting.
                  Defined as >
                    command! NvimuxHorizontalSplit spl|wincmd j|enew

=============================================================================
Customizing                                              *nvimux-customizing*

Nvimux allows several customizations on how to use it, as depicted below.


g:nvimux_prefix                              *nvimux_prefix* *g:nvimux_prefix*
                  Allows a different shortcut to nvimux commands.
                  Defaults to >
                    let g:nvimux_prefix='<C-b>'

g:nvimux_no_neoterm                  *nvimux_no_neoterm* *g:nvimux_no_neoterm*
                  Nvimux uses neoterm if available by default. If this var is
                  set, override the usage of neoterm to use plain neovim term
                  and nvimux |quick-term|
                  Is not set by default.


g:nvimux_toggle_direction                         *g:nvimux_toggle_direction*
                  Specifies the direction to open the scratchpad terminal.
                  Only available if not using neoterm.
                  Defaults to >
                    let g:nvimux_toggle_direction = 'botright'

g:nvimux_toggle_orientation                     *g:nvimux_toggle_orientation*
                  Specifies the orientation to open the scratchpad terminal.
                  Only available if not using neoterm.
                  Defaults to >
                    let g:nvimux_toggle_orientation = 'vertical'

g:nvimux_toggle_size                                   *g:nvimux_toggle_size*
                  Specifies the size of the scratchpad terminal.
                  Only available if not using neoterm.
                  Defaults to >
                    let g:nvimux_toggle_size = ''

g:nvimux_open_term_by_default                 *g:nvimux_open_term_by_default*
                  If set, |nvimux_prefix|c will open a terminal instead of an
                  empty buffer.
                  Is not set by default.

g:nvimux_override_{command}                        *g:nvomux_override_command*
                  Allows overriding commands with custom commands:
                  Example >
                    let g:nvimux_override_c = 'echomsg "Open new tab" | tabe'

g:nvimux_custom_bindings                            *g:nvimux_custom_bindings*
                  Allows custom bindings using nvimux's bind function.
                  Takes a list with three parameters:
                    key => Key to be set after <prefix>
                    command => the command to be used with the binding
                    modes => for which modes it will be valid. Supports:
                      'n' => Normal Mode
                      'v' => Visual Mode
                      'i' => Insert Mode; Prefixes command with '<ESC>'
                      't' => Terminal Mode' Prefixes with <C-\><C-n>
                  Example >
                    let g:nvimux_custom_bindings = [
                      \['s', ':sp<CR>', ['n', 'v', 'i', 't']],
                      \['v', ':vs<CR>', ['n', 'v', 'i', 't']]
                    \]

g:nvimux_vertical_split                              *g:nvimux_vertical_split*
                  Determines how nvimux splits vertically.
                  Defaults to >
                    let g:nvimux_vertical_split = ':NvimuxVerticalSplit<CR>'

g:nvimux_horizontal_split                          *g:nvimux_horizontal_split*
                  Determines how nvimux splits horizontally.
                  Defaults to >
                    let g:nvimux_horizontal_split = ':NvimuxHorizontalSplit<CR>'


=============================================================================
Credits                                                      *nvimux-credits*

Plugin created by Henry Kupty <hkupty@gmail.com>.
It is free to use and extend. Please consider opening a pull request if
extended.

Source at https://github.com/hkupty/nvimux
